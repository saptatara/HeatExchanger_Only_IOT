# Generated by Django 5.2.6 on 2025-09-19 08:06

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='SensorType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('unit', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100)),
                ('contact_email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('dashboard_url', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('alert_threshold', models.FloatField(default=0.8)),
                ('receive_sms_alerts', models.BooleanField(default=True)),
                ('receive_email_alerts', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('write_api_key', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('read_api_key', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='api.customer')),
                ('device_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.devicetype')),
            ],
        ),
        migrations.CreateModel(
            name='FoulingData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fouling_factor', models.FloatField()),
                ('thermal_efficiency', models.FloatField()),
                ('is_alert', models.BooleanField(default=False)),
                ('alert_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fouling_data', to='api.device')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SensorConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor_label', models.CharField(max_length=50)),
                ('expected_min', models.FloatField(blank=True, null=True)),
                ('expected_max', models.FloatField(blank=True, null=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensor_configs', to='api.device')),
                ('sensor_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.sensortype')),
            ],
            options={
                'unique_together': {('device', 'sensor_label')},
            },
        ),
        migrations.CreateModel(
            name='SensorData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensor_data', to='api.device')),
                ('sensor_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.sensorconfiguration')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['device', 'created_at'], name='api_sensord_device__bd46cb_idx')],
            },
        ),
    ]
